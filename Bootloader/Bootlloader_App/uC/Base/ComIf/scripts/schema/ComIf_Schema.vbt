.usedmodule ComIf
.Imports System
.Imports System.Collections.Generic
.Imports System.Xml.Serialization
.Imports System.IO
.
.Public Class TxMessage
.    Public Property Name As String = ""
.    Public Property ID As UInteger = 0
.    Public Property Length As UInteger = 1
.    Public Property TxConfCallback As String = ""
.    Public Property TxCallback As String = ""
.    Public Property ChecksumLength As String = ""
.    Public Property EnableAggregation As String = ""
.End Class
.
.Public Class RxMessage
.    Public Property Name As String = ""
.    Public Property ID As UInteger = 0
.    Public Property Length As UInteger = 1
.    Public Property RxCallback As String = ""
.    Public Property ChecksumLength As String = ""
.End Class
.
.Public Class Channel
.    Public Property Name As String = ""
.    Public Property TransmitBufferSize As UInteger = 144
.    Public Property DataTransferMethod As String = ""
.    Public Property TransmitFunction As String = ""
.    Public Property ErrorNotification As String = ""
.    Public Property EnableDynamicDataLength As String = ""
.    Public Property MaxDynamicDataLength As UInteger = 0
.    Public Property TxMessages As New List(Of TxMessage)
.    Public Property RxMessages As New List(Of RxMessage)
.    Public Property EnableAggregation As String = ""
.    Public Property AggregationTxCycle As UInteger = 100
.    Public Property AggregationBufferLimit As UInteger = 0
.    Public Property RequestReceptionFunction As String = ""
.    Public Property RequestReceptionTimeout As UInteger = 100
.End Class
.
.Public Class tComIfGeneral
.	 Public Property CommonLengthVerification As String = "true"
.	 Public Property InputMethod As String = ""
.    Public Property TxMainFunctionTimePeriod As UInteger = 10
.    Public Property RxMainFunctionTimePeriod As UInteger = 10
.End Class
.
.Public Class tComIfConfig
.    Public Property Channels As New List(Of Channel)
.End Class
.
.Public Class ComIf
.    Public Property Config As New tComIfConfig
.    Public Property General As New tComIfGeneral
.End Class
.
.Public Module ComIf_Project_Global
.
.    Public Function CopyRightsComments() As String
.        Dim myString as String = ""
.        myString += "/******************************************************************" + Environment.NewLine
.        myString += "                A Z E T E C H    S O L U T I O N S                 " + Environment.NewLine
.        myString += "-------------------------------------------------------------------" + Environment.NewLine
.        myString += "        T O O L   G E N E R A T E D   S O U R C E   C O D E        " + Environment.NewLine
.        myString += "                    D O   N O T   M O D I F Y                      " + Environment.NewLine
.        myString += "-------------------------------------------------------------------" + Environment.NewLine
.        myString += " This file is generated with the Azetech copyrighted software tool " + Environment.NewLine
.        myString += " No modification should be done in this file without a written     " + Environment.NewLine
.        myString += " consent from Azetech Solutions. Incase of any such instances,     " + Environment.NewLine
.        myString += " Azetech Solutions will not be liable to any damages it cause.     " + Environment.NewLine
.        myString += "-------------------------------------------------------------------" + Environment.NewLine
.        myString += " Any Distribution, Alteration, Removal, Disassemble, Decompile or  " + Environment.NewLine
.        myString += " or Reverse Engineer the given software, without written consent   " + Environment.NewLine
.        myString += " from Azetech Solutions by the Licensee or third parties were not  " + Environment.NewLine
.        myString += " allowed. Such instance is considered as a breach and the Licensee " + Environment.NewLine
.        myString += " is the sole responsible and liable to any damages it cause.       " + Environment.NewLine
.        myString += "******************************************************************/" + Environment.NewLine
.
.        Return myString
.    End Function
.
.    Public pComIf As ComIf = Nothing
.
.    Public Sub AddComIfModule(ByVal FilePath As String)
.        Try
.            Dim serializer As New XmlSerializer(GetType(ComIf))
.            Dim fs As New FileStream(FilePath, FileMode.Open)
.            pComIf = CType(serializer.Deserialize(fs), ComIf)
.        Catch ex As Exception
.            Console.WriteLine("ERROR: Exception while accessing " + FilePath)
.            Console.WriteLine(ex.Message)
.        End Try
.    End Sub
.
.End Module